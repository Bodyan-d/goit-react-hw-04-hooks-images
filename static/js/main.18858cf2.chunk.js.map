{"version":3,"sources":["sourse/images-API.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Error/Error.js","App.js","index.js"],"names":["page","fetchImages","imageName","fetch","then","res","ok","json","Promise","reject","Error","Searchbar","onChange","onSubmit","className","type","value","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","id","togleModal","largeURL","onClick","alt","Button","ImageGallery","imagesSearch","loadMore","map","image","webformatURL","largeImageURL","Modal","onClose","handelKeyDown","e","code","useEffect","window","addEventListener","removeEventListener","target","currentTarget","error","App","useState","setImageName","setError","setImagesSearch","status","setStatus","modalIsOpen","setModalIsOpen","largeImageNow","setLargeImageNow","handleChange","handleFormSubmit","preventDefault","fetchImagesAPI","imagesOnFeedback","hits","catch","color","height","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18858cf2.chunk.js","sourcesContent":["let page = 1;\r\nconst USER_KEY = '21922241-ac53faccd58a6508b64890669';\r\n\r\nexport default function fetchImages(imageName) {\r\n  return fetch(`https://pixabay.com/api/?q=${imageName}&page=${page}&key=${USER_KEY}&image_type=photo&orientation=horizontal&per_page=12\r\n`).then(res => {\r\n    if (res.ok) {\r\n      incrementPage();\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нету картинок по запросу: ${imageName}`));\r\n  });\r\n}\r\n\r\nfunction incrementPage() {\r\n  page += 1;\r\n}\r\n\r\nexport function resetPage() {\r\n  page = 1;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Searchbar({ onChange, imageName, onSubmit }) {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={onSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={onChange}\r\n          value={imageName}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ImageGalleryItem({ src, id, togleModal, largeURL }) {\r\n  return (\r\n    <li key={id} onClick={togleModal} className=\"ImageGalleryItem\">\r\n      <img src={src} alt={largeURL} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default function Button({ onClick }) {\r\n\r\n  return (\r\n    <button onClick={onClick} className=\"load-more\" id=\"loadMore\">\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport LMButton from '../Button';\r\n\r\nexport default function ImageGallery({ imagesSearch, loadMore, togleModal }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className=\"ImageGallery\">\r\n        {imagesSearch &&\r\n          imagesSearch.map(image => (\r\n            <ImageGalleryItem\r\n              togleModal={togleModal}\r\n              id={image.id}\r\n              src={image.webformatURL}\r\n              largeURL={image.largeImageURL}\r\n            />\r\n          ))}\r\n      </ul>\r\n\r\n      <LMButton onClick={loadMore} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nexport default function Modal({ largeImageURL, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handelKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handelKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  function handelKeyDown(e) {\r\n\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  function handleOverlayClick(e) {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt=\"pictures\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Error(error) {\r\n  return <h1>{error}</h1>;\r\n}\r\n","import React, { useState } from 'react';\r\nimport fetchImagesAPI, { resetPage } from './sourse/images-API';\r\nimport './App.css';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Modal from './components/Modal';\r\n// import Loader from './components/Loader';\r\nimport Loader from 'react-loader-spinner';\r\nimport Error from './components/Error';\r\n\r\nfunction App() {\r\n  const [imageName, setImageName] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [imagesSearch, setImagesSearch] = useState(null);\r\n  const [status, setStatus] = useState('idle');\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [largeImageNow, setLargeImageNow] = useState(null);\r\n\r\n  // state = {\r\n  //   imageName: '',\r\n  //   error: null,\r\n  //   imagesSearch: null,\r\n  //   status: 'idle',\r\n  //   modalIsOpen: false,\r\n  //   largeImageNow: null,\r\n  // };\r\n\r\n  function handleChange(e) {\r\n    setImageName(e.target.value);\r\n  }\r\n\r\n  function onLoadMoreClick(e) {\r\n    fetchImagesAPI(imageName).then(imagesOnFeedback => {\r\n      setImagesSearch([...imagesSearch, ...imagesOnFeedback.hits]);\r\n    });\r\n  }\r\n\r\n  function handleOpenModal(e) {\r\n    if (e.target.className === 'ImageGalleryItem-image') {\r\n      setModalIsOpen(true);\r\n      setLargeImageNow(e.target.alt);\r\n\r\n      // setState({\r\n      //   modalIsOpen: !this.state.modalIsOpen,\r\n      //   largeImageNow: e.target.alt,\r\n      // });\r\n    }\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setModalIsOpen(false);\r\n    setLargeImageNow(null);\r\n\r\n    // setState({\r\n    //   modalIsOpen: !state.modalIsOpen,\r\n    //   largeImageNow: null,\r\n    // });\r\n  }\r\n\r\n  function handleFormSubmit(e) {\r\n    e.preventDefault();\r\n    setStatus('pending');\r\n\r\n    resetPage();\r\n\r\n    fetchImagesAPI(imageName)\r\n      .then(imagesOnFeedback => {\r\n        setImagesSearch(imagesOnFeedback.hits);\r\n        setStatus('resolved');\r\n        // setState({\r\n        //   imagesSearch: imagesOnFeedback.hits,\r\n        //   status: 'resolved',\r\n        // });\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus('rejected');\r\n        // setState({ error, status: 'rejected' });\r\n      });\r\n  }\r\n\r\n  if (status === 'idle') {\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          onSubmit={handleFormSubmit}\r\n          onChange={handleChange}\r\n          imageName={imageName}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          onSubmit={handleFormSubmit}\r\n          onChange={handleChange}\r\n          imageName={imageName}\r\n        />\r\n        <div className=\"container-loader\">\r\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === 'resolved') {\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          onSubmit={handleFormSubmit}\r\n          onChange={handleChange}\r\n          imageName={imageName}\r\n        />\r\n\r\n        <ImageGallery\r\n          imagesSearch={imagesSearch}\r\n          loadMore={onLoadMoreClick}\r\n          togleModal={handleOpenModal}\r\n        />\r\n\r\n        {modalIsOpen && (\r\n          <Modal largeImageURL={largeImageNow} onClose={handleCloseModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === 'rejected') {\r\n    return (\r\n      <>\r\n        <Error error={error} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}